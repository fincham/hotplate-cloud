#!/bin/bash

export image="$1"
export hostname="$2"
export vg="foo-vg"

IFS='/' read -ra prefix <<< "$3"
export vm_address="${prefix[0]}"
export vm_netmask="${prefix[1]}"
export vm_mac="$(echo -n 52:54:00; dd bs=1 count=3 if=/dev/urandom 2>/dev/null |hexdump -v -e '/1 ":%02X"')"
export vm_root_volume="vm-$hostname-root"
export vm_root_size="5G"

if [[ ! $EUID -eq 0 ]]; then
    echo "You must be root to run this utility."
    exit 1
fi

if [[ ! -f "$image" ]]; then
    echo "Error: image file not found!"
    exit 1
fi

if [[ "" == "$hostname" ]]; then
    echo "Error: hostname not specified!"
    exit 1
fi

lv_exists() {
    if lvs --noheadings --separator=',' --select="lv_name=$1" | cut -f1 -d',' | grep "$1" >/dev/null; then
        return 0
    else
        return 1
    fi
}

echo "*** Creating root LV for \`$hostname'..."
if lv_exists $vm_root_volume; then
    echo "There is already an LV \`$vm_root_volume'."
    exit 1
fi
if ! lvcreate -L"$vm_root_size" -n "$vm_root_volume" "/dev/$vg"; then
    echo "*** Error: could not create root LV :("
    exit 1
fi

echo "*** Writing image to root LV..."
qemu-img convert -O raw "$image" "/dev/$vg/$vm_root_volume" -p

echo "*** Creating VM for libvirt..."
envsubst < templates/libvirt-template.xml > "/etc/libvirt/qemu/$hostname.xml"
virsh define "/etc/libvirt/qemu/$hostname.xml"

echo "*** Creating configuration drive..."
export uuid="$(virsh dominfo "$hostname" | egrep '^UUID:' | sed -e 's/.* //')"
tempdir="$(mktemp -d cloud.XXXXXXXXXXXXXXXX)"
# openstack style drive
mkdir -p "$tempdir/drive/openstack/latest"
envsubst < templates/meta_data.json > "$tempdir/drive/openstack/latest/meta_data.json"
envsubst < templates/user_data > "$tempdir/drive/openstack/latest/user_data"
genisoimage -output "$tempdir/config.iso" -volid config-2 -joliet -rock "$tempdir/drive"
cp "$tempdir/config.iso" "/var/lib/libvirt/images/config-$hostname.iso"
cat > "$tempdir/config.xml" <<EOF
<disk type='file' device='cdrom'>
   <driver name='qemu' type='raw' cache='none'/>
   <source file='/var/lib/libvirt/images/config-$hostname.iso'/>
   <readonly/>
   <target dev='hdc'/>
</disk>
EOF
virsh attach-device --config "$hostname" "$tempdir/config.xml"
rm -r "$tempdir"

echo "*** Upgrading packages and correcting unhealthy fixations on IPv4..."
tempdir="$(mktemp -d cloud.XXXXXXXXXXXXXXXX)"
dev="$(kpartx -sav "/dev/$vg/$vm_root_volume" | cut -f3 -d' ')"
echo "mounting rootfs from /dev/mapper/$dev"
mount "/dev/mapper/$dev" "$tempdir"
envsubst '$vm_address $vm_netmask' < "templates/interfaces" > "$tempdir/etc/network/interfaces"
rm "$tempdir/etc/resolv.conf"
echo "nameserver 2001:4860:4860::6464" > "$tempdir/etc/resolv.conf"
echo "nameserver 2001:4860:4860::64" >> "$tempdir/etc/resolv.conf"
cp "templates/run-in-chroot" "$tempdir/tmp"
chmod +x "$tempdir/tmp/run-in-chroot"
chroot "$tempdir" "/tmp/run-in-chroot"
rm "$tempdir/tmp/run-in-chroot"
umount "$tempdir"
rmdir "$tempdir"
kpartx -d "/dev/$vg/$vm_root_volume"

echo "*** Completed creating \`$hostname'"
echo "MAC address: $vm_mac"
